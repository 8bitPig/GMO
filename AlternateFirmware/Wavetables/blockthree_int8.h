#ifndef BLOCKTHREE_H_
#define BLOCKTHREE_H_
 
#if ARDUINO >= 100
#include "Arduino.h"
#else
#include "WProgram.h"
#endif
#include <avr/pgmspace.h>
 
#define BLOCKTHREE_NUM_CELLS 1122
#define BLOCKTHREE_SAMPLERATE 16384
 
const int8_t __attribute__((section(".progmem.data"))) BLOCKTHREE_DATA [] = {0,
0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 2, 0, 1, 0,
1, 0, 2, -1, 1, 0, 0, 1, 1, 2, -1, -1, 1, 0, -1, 4, 0, 0, 1, 4, -6, 9, 0, 6, 2,
11, -11, 25, -42, -27, 37, -83, 96, -12, -21, 75, -41, 1, -9, -25, -18, 2, -11,
18, 13, 10, 1, 5, -17, -18, -2, -21, 7, -10, 13, 9, -1, 12, -3, -13, -1, -3,
-20, 5, -2, -9, 9, 4, 3, 5, 5, -7, -10, -5, -12, -5, 1, 2, 7, 9, 4, -2, -4, -6,
-8, -8, -2, 0, 3, 6, 5, 4, 2, 1, -3, -1, -1, -2, 1, 1, 2, 4, 3, 2, 2, 0, -1, 0,
-2, 0, 2, 1, 3, 4, 2, 2, 0, 0, 0, -1, 0, 1, 1, 2, 2, -1, 2, -1, -4, 3, -3, 0, 3,
-1, 2, -2, 0, -3, -3, -1, -2, 1, 1, -3, 0, 3, -5, 2, -10, 1, -2, -5, 6, -5, 6,
-5, -2, -2, -3, -2, -6, 2, -6, 0, -2, -3, 0, -6, -4, 3, 4, 3, 1, -3, -7, -14,
-5, -4, 4, 5, 5, 5, -3, -1, -10, -6, -3, -1, 1, 2, 2, -3, 0, 2, 0, 1, -1, -2,
-4, -4, -2, -1, 1, 2, 5, 0, 4, -3, -4, -1, -2, -2, -3, 1, -4, 5, 3, -1, 9, 1,
-5, -3, -1, -4, -4, 1, 1, 6, -4, 3, 4, -3, 4, -5, -1, -6, 0, -1, 0, 6, 1, 4, 0,
-1, -2, 0, -3, -3, 1, -1, -1, 2, -1, 2, 2, 0, -1, -3, -1, -4, 0, 1, 0, 1, 0, 1,
-1, 0, -2, 0, -1, -3, -1, -1, 0, 1, 1, 1, -1, -1, -2, -2, -3, -1, 2, -1, 0, 0,
0, -2, 1, 0, 0, 0, -2, -1, -5, 1, 1, -1, 2, 1, 1, -2, -1, 1, -3, 0, -1, -2, 0,
-1, 0, 1, -1, 0, 0, 0, -1, 0, -1, 1, -2, -2, 1, 0, 1, -3, 1, -3, 3, -2, 1, 1, 1,
0, -6, 3, -3, 5, 1, -2, -1, -2, -4, -1, 0, 1, 2, 0, 3, -1, 1, -4, -3, -3, -1,
-1, 1, 2, 0, 1, -2, -2, -1, -2, -3, 0, -1, 1, 0, 0, 1, 0, -1, -1, -1, -3, 0, -1,
1, 1, -1, 3, -2, -1, 0, -3, -1, 0, -1, 0, 2, -1, 1, 0, -2, -1, 0, -2, 1, -1, -1,
0, -2, 1, 0, -1, 0, 1, -1, -1, -1, -1, -1, 0, 0, -1, 1, -1, -2, 0, -3, 0, -1,
-2, 1, -1, -1, 0, -1, -1, 1, -1, 0, -1, -2, 1, -1, 0, 0, -2, 0, 1, -2, -2, 0,
-1, 0, -1, 1, 0, -2, 0, -2, -2, 0, -1, 0, 0, 0, 1, -2, 0, 0, -1, 1, -1, 0, 0,
-1, -1, -1, 0, -1, 0, 0, 0, 0, -1, -1, 0, -1, 1, 0, 0, -1, 0, -1, 0, 0, -2, 1,
-1, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, -1, 0, 0,
-2, 0, 0, -1, 0, -1, -2, 0, -1, -1, 0, 0, -1, 0, 0, -1, 0, -1, -1, 0, -1, 0, 1,
-1, 0, 0, -1, 0, -1, -1, -2, -1, 0, 0, 1, 0, 0, -2, -1, 0, -1, -1, 0, 0, -1, 0,
0, -1, 1, -1, -1, 0, -2, -1, -1, 1, -2, 1, 1, -2, 0, -1, -1, -2, 0, -1, 0, 0,
-1, -1, -1, 0, -2, -1, 1, -1, 0, -1, -1, -2, -1, -1, -1, 0, -1, 0, -1, -1, -1,
0, -1, 0, -1, -1, 0, -1, 0, -1, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0,
0, -1, -2, -1, -1, -1, 0, 1, 0, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0,
0, 0, 0, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0,
0, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, 0, -2, 0, -1, -1, 0, 0, 0, 0, -1,
-1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -2, -1, -1, -2,
0, -1, 0, 0, 0, 0, 0, -1, 0, -1, -1, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0,
-1, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, -1, 0, -1, 0, 0, 0, 0, -1, -1, 0,
0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, 0,
-1, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, -1, -1, 0, -1, 0, 0, 0,
-1, 0, -1, -1, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, 0, -1, -1, 0, -1, -1, 0, -1,
-1, 0, -1, 0, 0, -1, 0, -1, -1, -1, 0, -1, 0, 0, 0, 0, -1, -1, 0, -1, -1, 0, 0,
0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0,
-1, -1, -1, 0, 0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1,
-1, -1, -1, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, 0, -1, 0, 0, 0, 0, -1, 0, -1, 0, 0,
-1, 0, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, -1, -1, -1, -1, -1,
-1, -1, 0, -1, 0, -1, -1, -1, -1, -1, 0, 0, -1, -1, 0, -1, 0, -1, -1, 0, -1, 0,
-1, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, -1,
-1, -1, -1, -1, 0, 0, 0, 0, -1, 0, 0, -1, -1, 0, -1, -1, 0, 0, 0, 0, 0, -1, -1,
-1, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0,
-1, 0, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, 0,
-1, 0, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0,
-1, -1, -1, -1, -1, };

#endif /* BLOCKTHREE_H_ */
