#ifndef DRMNINE_H_
#define DRMNINE_H_
 
#if ARDUINO >= 100
#include "Arduino.h"
#else
#include "WProgram.h"
#endif
#include <avr/pgmspace.h>
 
#define DRMNINE_NUM_CELLS 1551
#define DRMNINE_SAMPLERATE 16384
 
const int8_t __attribute__((section(".progmem.data"))) DRMNINE_DATA [] = {1, -2,
3, -30, 12, 16, -6, 11, -10, 3, -2, 1, -1, 5, 1, -9, 3, 3, 2, -6, -5, 3, 6, -6,
4, -1, -7, 3, -3, 3, -1, 4, -4, 1, -5, 1, 2, 2, -9, 2, 10, -11, 0, 3, 2, -10,
11, -5, -1, -2, 1, 0, 4, -2, -8, 6, -5, 8, -4, -3, 0, 1, 2, 2, -11, 4, 2, -2, 7,
-9, 3, 0, -3, 1, 3, 3, -11, 8, -3, -2, 2, -9, 10, 0, -5, -1, 4, -2, -2, -4, 9,
-3, -3, -1, -1, 1, -4, 8, -4, -3, 4, -5, -1, 3, 3, -2, -4, 6, -10, 1, 5, -2, 0,
5, -12, 6, 0, -6, 4, -6, 10, -10, 9, -5, -3, 2, -6, 8, -7, 4, -5, 5, 7, -10, -6,
0, 9, -12, 3, 0, 4, 2, -7, 6, -10, 6, -2, -4, 3, 2, -7, 3, 1, -7, 5, -4, 4, 0,
-6, 3, -1, -4, 7, -4, -5, 5, -6, 6, -6, 3, -4, -2, 8, -8, 3, -4, -1, 5, -4, -4,
6, -4, 0, -1, 0, 2, 1, -8, 2, 0, -5, 5, 2, -3, -3, 0, -1, 3, -7, 5, -2, -2, 5,
-6, 5, -4, -2, 6, -7, 3, -3, -1, 4, -5, -2, 1, 2, -2, 0, -1, -6, 8, -6, 4, -5,
-7, 10, -4, -3, 6, -9, -2, 11, -8, 2, -6, 7, -8, 2, -3, 3, 1, -9, 7, -5, 3, -6,
9, -2, -9, 3, -1, -1, 2, -6, 4, -2, -3, 6, -3, -2, 0, 1, -3, 0, -3, 6, -4, -3,
6, -4, -1, -1, -1, 0, -2, 2, -3, -1, 5, -6, 7, -8, 5, -4, -5, 5, -7, 7, -5, 1,
-1, 0, -2, 3, -3, 0, 0, 1, -2, -2, 3, -3, 2, -6, 4, -2, -1, 0, -2, 2, -2, 0, 6,
-11, 4, -2, -1, 2, -2, 3, -7, 5, -2, -1, -1, 2, -3, 1, -3, 2, -3, -1, -1, 2, 0,
-2, 1, -6, 6, -7, 1, 4, -4, -2, 6, -3, -1, -2, 4, -5, -1, 0, 0, 5, -7, 0, -1, 0,
-1, 1, -2, 2, -4, -3, 4, -1, -2, -1, 0, 0, 1, 1, -5, 3, 0, -3, 1, 1, 0, -5, 4,
-5, 3, -2, 1, -1, -3, 8, -11, 1, 2, -2, 4, 1, -7, 1, 1, -6, 7, -1, -3, 2, -4, 1,
-1, -1, 2, -2, 2, -2, -2, 0, 1, -3, 2, -3, -3, 2, 0, 1, -2, 2, -4, -1, 2, -1,
-1, -1, -2, 3, -1, -1, -1, -2, 3, -3, 2, 0, -3, 1, -4, 1, 2, -2, -1, 1, -3, -1,
0, -2, 0, 0, 0, -1, -1, -2, 4, -4, 0, 0, -3, 1, 0, 0, -1, -2, 0, -1, -1, 0, 0,
-1, 0, 0, -2, 1, -2, 1, -2, -2, 1, -1, -1, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0,
-1, 0, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 0,
-1, -1, 0, -1, 0, -1, -1, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-1, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, -1, 0, 0, 0, -1, 0, 0, 0,
-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1,
-1, -1, 0, -1, -1, -1, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, };

#endif /* DRMNINE_H_ */
